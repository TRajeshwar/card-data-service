# Node.js Function App to Linux on Azure
# Build a Node.js function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '065332ae-1485-4324-8772-d496df9e70f6'


  # Function app name
  functionAppName: 'getCardDetails-v2'
 
  # Environment name
  environmentName: 'Staging'
 
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build 
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
      
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        if [ -f extensions.csproj ]
        then
            dotnet build extensions.csproj --runtime ubuntu.16.04-x64 --output ./bin
        fi
      displayName: 'Build extensions'
    - script: |
        cd Az-function
        pwd
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'Prepare binaries'
      
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/Az-function'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/getCardDetails-$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/getCardDetails-$(Build.BuildId).zip
      artifact: getCardDetails
      
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:            
          - task: AzureFunctionApp@1
            displayName: 'Azure Functions App Deploy: '
            inputs:
              azureSubscription: 'Pay-As-You-Go (d4c45501-af06-4f45-b92b-7d2b454f39fe)-1255'
              appType: 'functionApp'
              appName: '$(functionAppName)'
              deployToSlotOrASE: true
              resourceGroupName: 'tcs-poc'
              slotName: 'Staging'
              package: '$(Pipeline.Workspace)/getCardDetails/getCardDetails-$(Build.BuildId).zip'
              deploymentMethod: 'runFromPackage'
